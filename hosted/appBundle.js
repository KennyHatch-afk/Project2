(()=>{var e={603:e=>{const t=e=>{document.getElementById("errorMessage").textContent=e,document.getElementById("domoMessage").classList.remove("hidden")};e.exports={handleError:t,sendPost:async(e,a,o)=>{const m=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),n=await m.json();document.getElementById("domoMessage").classList.add("hidden"),n.error&&t(n.error),n.redirect&&(window.location=n.redirect),o&&o(n)},hideError:()=>{document.getElementById("domoMessage").classList.add("hidden")}}}},t={};function a(o){var m=t[o];if(void 0!==m)return m.exports;var n=t[o]={exports:{}};return e[o](n,n.exports,a),n.exports}(()=>{const e=a(603);let t="";const o=t=>{t.preventDefault(),e.hideError();const a=t.target.querySelector("#domoName").value,o=t.target.querySelector("#_csrf").value;return a?(e.sendPost(t.target.action,{name:a,_csrf:o},d),!1):(e.handleError("All fields are required!"),!1)},m=a=>{a.preventDefault(),e.hideError();const o=a.target.parentElement.querySelector("#domoName").innerHTML.split("Name:")[1].trim(),m=t;e.sendPost("/update",{name:o,_csrf:m},d)},n=e=>{console.log("good")},c=e=>{console.log("good")},r=e=>React.createElement("form",{id:"domoForm",onSubmit:o,name:"domoForm",action:"/maker",method:"POST",className:"domoForm"},React.createElement("label",{htmlFor:"name"},"Name: "),React.createElement("input",{id:"domoName",type:"text",name:"name",placeholder:"Domo Name"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"makeDomoSubmit",type:"submit",value:"Make Domo"})),s=e=>{if(0===e.domos.length)return React.createElement("div",{className:"domoList"},React.createElement("h3",{className:"emptyDomo"},"No Domos Yet!"));const t=e.domos.map((e=>React.createElement("div",{key:e._id,className:"domo"},React.createElement("img",{src:"/assets/img/domoface.jpeg",alt:"domo face",className:"domoFace"}),React.createElement("h3",{id:"domoName",className:"domoName"}," Name: ",e.name," "),React.createElement("h3",{className:"domoHealth"}," Health: ",e.health," "),React.createElement("h3",{className:"domoAttack"}," Attack: ",e.attack," "),React.createElement("h3",{className:"domoSpeed"}," Speed: ",e.speed," "),React.createElement("input",{onClick:m,className:"trainHealth",type:"button",value:"Health"}),React.createElement("input",{onClick:n,className:"trainAttack",type:"button",value:"Attack"}),React.createElement("input",{onClick:c,className:"trainSpeed",type:"button",value:"Speed"}))));return React.createElement("div",{className:"domoList"},t)},d=async()=>{const e=await fetch("/getDomos"),t=await e.json();ReactDOM.render(React.createElement(s,{domos:t.domos}),document.getElementById("domos"))};window.onload=async()=>{const e=await fetch("/getToken"),a=await e.json();t=a.csrfToken,console.log(a.csrfToken),ReactDOM.render(React.createElement(r,{csrf:a.csrfToken}),document.getElementById("makeDomo")),ReactDOM.render(React.createElement(s,{domos:[]}),document.getElementById("domos")),d()}})()})();